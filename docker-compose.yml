version: "3"

services:
  steedos:
    image: steedos/steedos-project-template:2.1
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - "./storage:/app/storage"
      - "./.steedos:/app/.steedos"
    environment:
      - STEEDOS_CLOUD_SPACE_ID= #在此填入私有部署记录中的魔方ID
      - STEEDOS_CLOUD_API_KEY= #在此填入私有部署记录中的API Key
      - ROOT_URL=http://localhost:3000 #在此填入服务运行的正式网址，包含端口号3000
      - PORT=3000
      - MONGO_URL=mongodb://mongo:27017/steedos
      - MONGO_OPLOG_URL=mongodb://mongo:27017/local
      - STEEDOS_CFS_STORE=local
      - STEEDOS_STORAGE_DIR=/app/storage
      - TRANSPORTER=redis://redis:6379
      - CACHER=redis://redis:6379/2
    depends_on:
      - redis
      - mongo
    
  redis:
    image: redis:6.2
    restart: always
    volumes:
      - "./docker-volumes/redis/data:/data"
    command: ["/bin/sh","-c", "redis-server --save \"\" --appendonly no"]
    ports:
      - "6379:6379"

  mongo:
    image: mongo:4.2
    restart: always
    volumes:
      - "./docker-volumes/mongo/data/db:/data/db"
    command: mongod --oplogSize 128 --profile=1 --slowms=500 --replSet rs0 --bind_ip_all
    ports:
      - "27017:27017"

  # this container's job is just run the command to initialize the replica set.
  # it will run the command and remove himself (it will not stay running)
  mongo-init-replica:
    image: mongo:4.2
    command: >
      bash -c
        "for i in `seq 1 30`; do
          mongo mongo/steedos --eval \"
            rs.initiate({
              _id: 'rs0',
              version: 1,
              members: [ { _id: 0, host: 'mongo:27017' } ]})\" &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    depends_on:
      - mongo